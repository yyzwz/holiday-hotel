<template>
  <div class="search">
    <Card>
      <Row class="operation">
        <Button @click="add" type="primary" icon="md-add" ghost>添加子节点</Button>
        <Button @click="addRoot" icon="md-add" ghost>添加一级节点</Button>
        <Button @click="delAll" icon="md-trash" ghost>批量删除</Button>
        <Button @click="getParentList" icon="md-refresh" ghost>刷新</Button>
        <i-switch v-model="strict" size="large" style="margin-left:5px">
          <span slot="open">级联</span>
          <span slot="close">单选</span>
        </i-switch>
      </Row>
      <Row type="flex" justify="start">
        <Col span="6">
          <Alert show-icon>
            当前选择编辑：
            <span class="select-title">{{editTitle}}</span>
            <a class="select-clear" v-if="form.id" @click="cancelEdit">取消选择</a>
          </Alert>
          <Input
            v-model="searchKey"
            suffix="ios-search"
            @on-change="search"
            placeholder="输入节点名搜索"
            clearable
          />
          <div class="tree-bar" :style="{maxHeight: maxHeight}">
            <Tree
              ref="tree"
              :data="data"
              :load-data="loadData"
              show-checkbox
              @on-check-change="changeSelect"
              @on-select-change="selectTree"
              :check-strictly="!strict"
            ></Tree>
            <Spin size="large" fix v-if="loading"></Spin>
          </div>
        </Col>
        <Col span="${span}" style="margin-left:10px">
          <Form ref="form" :model="form" :label-width="100" :rules="formValidate" <% if(rowNum>1){ %>inline<% } %>>
            <FormItem label="上级节点" prop="parentTitle">
              <div style="display:flex;width:${width}">
                <Input v-model="form.parentTitle" readonly style="margin-right:10px;"/>
                <Poptip transfer trigger="click" placement="right-start" title="选择上级部门" width="250">
                  <Button icon="md-list">选择部门</Button>
                  <div slot="content" style="position:relative;min-height:5vh">
                    <Tree :data="dataEdit" :load-data="loadData" @on-select-change="selectTreeEdit"></Tree>
                    <Spin size="large" fix v-if="loadingEdit"></Spin>
                  </div>
                </Poptip>
              </div>
            </FormItem>
            <FormItem label="名称" prop="title">
              <Input v-model="form.title" style="width:${width}"/>
            </FormItem>
            <%
            for(item in fields){
              if(item.editable){
            %>
            <FormItem label="${item.name}" prop="${item.field}" <% if(rowNum>1&&(item.type=="switch"||item.type=="radio")){ %>style="width:${itemWidth}"<% } %> <% if(item.type=="wangEditor"||item.type=="quill"){ %>class="form-${item.type}"<% } %>>
              <%
              if(item.type=="text"){
              %>
              <Input v-model="form.${item.field}" style="width:${editWidth}"/>
              <%
              }
              %>
              <%
              if(item.type=="select"){
              %>
              <Select v-model="form.${item.field}" style="width:${editWidth}">
                <Option value="0">请自行编辑下拉菜单</Option>
              </Select>
              <%
              }
              %>
              <%
              if(item.type=="number"){
              %>
              <InputNumber v-model="form.${item.field}" style="width:${editWidth}"></InputNumber>
              <%
              }
              %>
              <%
              if(item.type=="switch"){
              %>
              <i-switch v-model="form.${item.field}"></i-switch>
              <%
              }
              %>
              <%
              if(item.type=="radio"){
              %>
              <RadioGroup v-model="form.${item.field}">
                <Radio label="0">请自行编辑单选框</Radio>
                <Radio label="1">请自行编辑单选框</Radio>
              </RadioGroup>
              <%
              }
              %>
              <%
              if(item.type=="date"){
              %>
              <DatePicker type="date" v-model="form.${item.field}" style="width:${editWidth}"></DatePicker>
              <%
              }
              %>
              <%
                if(item.type=="daterange"){
              %>
              <DatePicker type="daterange" v-model="form.${item.field}" style="width:${editWidth}"></DatePicker>
              <%
              }
              %>
              <%
              if(item.type=="time"){
              %>
              <TimePicker type="time" v-model="form.${item.field}" style="width:${editWidth}"></TimePicker>
              <%
              }
              %>
              <%
              if(item.type=="area"){
              %>
              <al-cascader v-model="form.${item.field}" data-type="code" level="${item.level}" style="width:${editWidth}"/>
              <%
              }
              %>
              <%
              if(item.type=="slider"){
              %>
              <Slider v-model="form.${item.field}" style="width:${editWidth}"></Slider>
              <%
              }
              %>
              <%
              if(item.type=="upload"){
              %>
              <upload-pic-input v-model="form.${item.field}" style="width:${editWidth}"></upload-pic-input>
              <%
              }
              %>
              <%
              if(item.type=="uploadThumb"){
              %>
              <uploadThumb v-model="form.${item.field}" multiple style="width:${width}"></uploadThumb>
              <%
              }
              %>
              <%
              if(item.type=="wangEditor"&&!toQuill){
              %>
              <wangEditor v-model="form.${item.field}" style="width:${wangEditorWidth}"></wangEditor>
              <%
              }
              %>
              <%
              if(item.type=="quill"||(item.type=="wangEditor"&&toQuill)){
              %>
              <quill v-model="form.${item.field}" style="width:${quillWidth}"></quill>
              <%
              }
              %>
              <%
              if(item.type=="password"){
              %>
              <password v-model="form.${item.field}" style="width:${width}"></password>
              <%
              }
              %>
            </FormItem>
            <%
              }
            }
            %>
            <FormItem label="排序值" prop="sortOrder" style="width:${itemWidth}">
              <Poptip trigger="hover" placement="right" content="值越小越靠前，支持小数">
                <InputNumber :max="1000" :min="0" v-model="form.sortOrder"></InputNumber>
              </Poptip>
            </FormItem>
            <br>
            <Form-item>
              <Button
                @click="submitEdit"
                :loading="submitLoading"
                type="primary"
                icon="ios-create-outline"
                style="margin-right:5px"
              >修改并保存</Button>
              <Button @click="handleReset">重置</Button>
            </Form-item>
          </Form>
        </Col>
      </Row>
    </Card>

    <Modal :title="modalTitle" v-model="modalVisible" :mask-closable="false" :width="${modalWidth}">
      <Form ref="formAdd" :model="formAdd" :label-width="100" :rules="formValidate" label-position="left" <% if(rowNum>1){ %>inline<% } %>>
        <div v-if="showParent">
          <FormItem label="上级节点：">{{form.title}}</FormItem>
        </div>
        <FormItem label="名称" prop="title">
          <Input v-model="formAdd.title" style="width:${width}"/>
        </FormItem>
        <%
        for(item in fields){
          if(item.editable){
        %>
        <FormItem label="${item.name}" prop="${item.field}" <% if(rowNum>1&&(item.type=="number"||item.type=="switch"||item.type=="radio")){ %>style="width:${itemWidth}"<% } %> <% if(item.type=="wangEditor"||item.type=="quill"){ %>class="form-${item.type}"<% } %>>
          <%
          if(item.type=="text"){
          %>
          <Input v-model="formAdd.${item.field}" style="width:${width}"/>
          <%
          }
          %>
          <%
          if(item.type=="select"){
          %>
          <Select v-model="formAdd.${item.field}" style="width:${width}">
            <Option value="0">请自行编辑下拉菜单</Option>
          </Select>
          <%
          }
          %>
          <%
          if(item.type=="number"){
          %>
          <InputNumber v-model="formAdd.${item.field}"></InputNumber>
          <%
          }
          %>
          <%
          if(item.type=="switch"){
          %>
          <i-switch v-model="formAdd.${item.field}"></i-switch>
          <%
          }
          %>
          <%
          if(item.type=="radio"){
          %>
          <RadioGroup v-model="formAdd.${item.field}">
            <Radio label="0">单选框值A</Radio>
            <Radio label="1">单选框值B</Radio>
          </RadioGroup>
          <%
          }
          %>
          <%
          if(item.type=="date"){
          %>
          <DatePicker type="date" v-model="formAdd.${item.field}" style="width:${width}"></DatePicker>
          <%
          }
          %>
          <%
            if(item.type=="daterange"){
          %>
          <DatePicker type="daterange" v-model="formAdd.${item.field}" style="width:${width}"></DatePicker>
          <%
          }
          %>
          <%
          if(item.type=="time"){
          %>
          <TimePicker type="time" v-model="formAdd.${item.field}" style="width:${width}"></TimePicker>
          <%
          }
          %>
          <%
          if(item.type=="area"){
          %>
          <al-cascader v-model="formAdd.${item.field}" data-type="code" level="${item.level}" style="width:${width}"/>
          <%
          }
          %>
          <%
          if(item.type=="slider"){
          %>
          <Slider v-model="formAdd.${item.field}" style="width:${width}"></Slider>
          <%
          }
          %>
          <%
          if(item.type=="upload"){
          %>
          <upload-pic-input v-model="formAdd.${item.field}" style="width:${width}"></upload-pic-input>
          <%
          }
          %>
          <%
          if(item.type=="uploadThumb"){
          %>
          <uploadThumb v-model="formAdd.${item.field}" multiple style="width:${width}"></uploadThumb>
          <%
          }
          %>
          <%
          if(item.type=="wangEditor"&&!toQuill){
          %>
          <wangEditor id="editor2" v-model="formAdd.${item.field}" style="width:${wangEditorWidth}"></wangEditor>
          <%
          }
          %>
          <%
          if(item.type=="quill"||(item.type=="wangEditor"&&toQuill)){
          %>
          <quill id="editor2" v-model="formAdd.${item.field}" style="width:${quillWidth}"></quill>
          <%
          }
          %>
          <%
          if(item.type=="password"){
          %>
          <password v-model="formAdd.${item.field}" style="width:${width}"></password>
          <%
          }
          %>
        </FormItem>
        <%
          }
        }
        %>
        <FormItem label="排序值" prop="sortOrder" style="width:${itemWidth}">
          <Poptip trigger="hover" placement="right" content="值越小越靠前，支持小数">
            <InputNumber :max="1000" :min="0" v-model="formAdd.sortOrder"></InputNumber>
          </Poptip>
        </FormItem>
      </Form>
      <div slot="footer">
        <Button type="text" @click="modalVisible=false">取消</Button>
        <Button type="primary" :loading="submitLoading" @click="submitAdd">提交</Button>
      </div>
    </Modal>
  </div>
</template>

<script>
<%
if(api){
%>
// 根据你的实际请求api.js位置路径修改
import { init${apiName}, load${apiName}, add${apiName}, edit${apiName}, delete${apiName}, search${apiName} } from "@/api/index";
<%
}
%>
<%
if(upload){
%>
import uploadPicInput from "@/views/template/upload-pic-input";
<%
}
%>
<%
if(uploadThumb){
%>
import uploadThumb from "@/views/template/upload-pic-thumb";
<%
}
%>
<%
if(wangEditor&&!toQuill){
%>
import wangEditor from "@/views/template/editor";
<%
}
%>
<%
if(quill||(wangEditor&&!toQuill)){
%>
import quill from "@/views/template/quill";
<%
}
%>
<%
if(password){
%>
import password from "@/views/template/set-password";
<%
}
%>
export default {
  name: "${vueName}",
  components: {
    <%
    if(upload){
    %>
    uploadPicInput,
    <%
    }
    %>
    <%
    if(uploadThumb){
    %>
    uploadThumb,
    <%
    }
    %>
    <%
    if(wangEditor&&!toQuill){
    %>
    wangEditor,
    <%
    }
    %>
    <%
    if(quill||(wangEditor&&toQuill)){
    %>
    quill,
    <%
    }
    %>
    <%
    if(password){
    %>
    password,
    <%
    }
    %>
  },
  data() {
    return {
      maxHeight: "500px",
      strict: true,
      loading: false, // 树加载状态
      loadingEdit: false, // 编辑上级树加载状态
      modalVisible: false, // 添加显示
      selectList: [], // 多选数据
      selectCount: 0, // 多选计数
      showParent: false, // 显示上级标识
      modalTitle: "", // 添加标题
      editTitle: "", // 编辑节点名称
      searchKey: "", // 搜索树
      form: {
        // 编辑对象初始化数据
        id: "",
        title: "",
        parentId: "",
        parentTitle: "",
        sortOrder: 0,
        <%
        for(item in fields){
          if(item.editable){
        %>
        <% if(item.type=="switch"){ %>
        ${item.field}: true,
        <% }else if(item.type=="number"||item.type=="slider"){ %>
        ${item.field}: 0,
        <% }else if(item.type=="area"||item.type=="uploadThumb"){ %>
        ${item.field}: [],
        <% }else{ %>
        ${item.field}: "",
        <% } %>
        <%
          }
        }
        %>
      },
      formAdd: {
        // 添加对象初始化数据
      },
      formValidate: {
        // 表单验证规则
        title: [{ required: true, message: "不能为空", trigger: "blur" }],
        sortOrder: [
          {
            required: true,
            type: "number",
            message: "排序值不能为空",
            trigger: "blur"
          }
        ],
        <%
        for(item in fields){
          if(item.editable&&item.validate){
        %>
        <% if(item.type=="daterange"||item.type=="area"||item.type=="uploadThumb"){ %>
        ${item.field}: [{ type: "array", required: true, message: "不能为空", trigger: "blur" }],
        <% }else if(item.type=="date"){ %>
        ${item.field}: [{ type: "date", required: true, message: "不能为空", trigger: "blur" }],
        <% }else if(item.type=="number"||item.type=="slider"){ %>
        ${item.field}: [{ type: "number", required: true, message: "不能为空", trigger: "blur" }],
        <% }else if(item.type=="switch"){ %>
        ${item.field}: [{ type: "boolean", required: true, message: "不能为空", trigger: "blur" }],
        <% }else{ %>
        ${item.field}: [{ required: true, message: "不能为空", trigger: "blur" }],
        <% } %>
        <%
          }
        }
        %>
      },
      submitLoading: false,
      data: [],
      dataEdit: []
    };
  },
  methods: {
    init() {
      // 初始化一级节点
      this.getParentList();
      // 初始化一级节点为编辑上级节点使用
      this.getParentListEdit();
    },
    getParentList() {
      <%
      if(api){
      %>
      this.loading = true;
      init${apiName}().then(res => {
        this.loading = false;
        if (res.success) {
          res.result.forEach(function(e) {
            if (e.isParent) {
              e.loading = false;
              e.children = [];
            }
          });
          this.data = res.result;
        }
      });
      <%
      } else {
      %>
      // this.loading = true;
      // this.getRequest("一级数据请求路径，如/tree/getByParentId/0").then(res => {
      //   this.loading = false;
      //   if (res.success) {
      //     res.result.forEach(function(e) {
      //       if (e.isParent) {
      //         e.loading = false;
      //         e.children = [];
      //       }
      //     });
      //     this.data = res.result;
      //   }
      // });
      // 模拟请求成功
      this.data = [
      ];
      <%
      }
      %>
    },
    getParentListEdit() {
      <%
      if(api){
      %>
      this.loadingEdit = true;
      init${apiName}().then(res => {
        this.loadingEdit = false;
        if (res.success) {
          res.result.forEach(function(e) {
            if (e.isParent) {
              e.loading = false;
              e.children = [];
            }
          });
          // 头部加入一级
          let first = {
            id: "0",
            title: "一级节点"
          };
          res.result.unshift(first);
          this.dataEdit = res.result;
        }
      });
      <%
      } else {
      %>
      // this.loadingEdit = true;
      // this.getRequest("/tree/getByParentId/0").then(res => {
      //   this.loadingEdit = false;
      //   if (res.success) {
      //     res.result.forEach(function(e) {
      //       if (e.isParent) {
      //         e.loading = false;
      //         e.children = [];
      //       }
      //     });
      //     // 头部加入一级
      //     let first = {
      //       id: "0",
      //       title: "一级节点"
      //     };
      //     res.result.unshift(first);
      //     this.dataEdit = res.result;
      //   }
      // });
      // 模拟请求成功
      this.dataEdit = [
      ];
      <%
      }
      %>
    },
    loadData(item, callback) {
      <%
      if(api){
      %>
      load${apiName}(item.id).then(res => {
        if (res.success) {
          res.result.forEach(function(e) {
            if (e.isParent) {
              e.loading = false;
              e.children = [];
            }
          });
          callback(res.result);
        }
      });
      <%
      } else {
      %>
      // 异步加载树子节点数据
      // this.getRequest("请求路径，如/tree/getByParentId/" + item.id).then(res => {
      //   if (res.success) {
      //     res.result.forEach(function(e) {
      //       if (e.isParent) {
      //         e.loading = false;
      //         e.children = [];
      //       }
      //     });
      //     callback(res.result);
      //   }
      // });
      <%
      }
      %>
    },
    search() {
      // 搜索树
      if (this.searchKey) {
        <%
        if(api){
        %>
        this.loading = true;
        search${apiName}({ title: this.searchKey }).then(res => {
          this.loading = false;
          if (res.success) {
            this.data = res.result;
          }
        });
        <%
        } else {
        %>
        // 模拟请求
        // this.loading = true;
        // this.getRequest("搜索请求路径", { title: this.searchKey }).then(res => {
        //   this.loading = false;
        //   if (res.success) {
        //     this.data = res.result;
        //   }
        // });
        // 模拟请求成功
        this.data = [
        ];
        <%
        }
        %>
      } else {
        // 为空重新加载
        this.getParentList();
      }
    },
    selectTree(v) {
      if (v.length > 0) {
        // 转换null为""
        for (let attr in v[0]) {
          if (v[0][attr] === null) {
            v[0][attr] = "";
          }
        }
        let str = JSON.stringify(v[0]);
        let data = JSON.parse(str);
        this.form = data;
        this.editTitle = data.title;
      } else {
        this.cancelEdit();
      }
    },
    cancelEdit() {
      let data = this.$refs.tree.getSelectedNodes()[0];
      if (data) {
        data.selected = false;
      }
      this.$refs.form.resetFields();
      this.form.id = "";
      this.editTitle = "";
    },
    selectTreeEdit(v) {
      if (v.length > 0) {
        // 转换null为""
        for (let attr in v[0]) {
          if (v[0][attr] === null) {
            v[0][attr] = "";
          }
        }
        let str = JSON.stringify(v[0]);
        let data = JSON.parse(str);
        this.form.parentId = data.id;
        this.form.parentTitle = data.title;
      }
    },
    handleReset() {
      this.$refs.form.resetFields();
      this.form.status = 0;
    },
    submitEdit() {
      this.$refs.form.validate(valid => {
        if (valid) {
          if (!this.form.id) {
            this.$Message.warning("请先点击选择要修改的节点");
            return;
          }
          this.submitLoading = true;
          <%
          if(api){
          %>
          edit${apiName}(this.form).then(res => {
          this.submitLoading = false;
          if (res.success) {
            this.$Message.success("编辑成功");
              this.init();
              this.modalVisible = false;
            }
          });
          <%
          } else {
          %>
          // this.postRequest("请求路径，如/tree/edit", this.form).then(res => {
          //   this.submitLoading = false;
          //   if (res.success) {
          //     this.$Message.success("编辑成功");
          //     this.init();
          //     this.modalVisible = false;
          //   }
          // });
          // 模拟成功
          this.submitLoading = false;
          this.$Message.success("编辑成功");
          this.modalVisible = false;
          <%
          }
          %>
        }
      });
    },
    submitAdd() {
      this.$refs.formAdd.validate(valid => {
        if (valid) {
          this.submitLoading = true;
          <%
          if(api){
          %>
          add${apiName}(this.formAdd).then(res => {
            this.submitLoading = false;
            if (res.success) {
              this.$Message.success("添加成功");
              this.init();
              this.modalVisible = false;
            }
          });
          <%
          } else {
          %>
          // this.postRequest("请求路径，如/tree/add", this.formAdd).then(res => {
          //   this.submitLoading = false;
          //   if (res.success) {
          //     this.$Message.success("添加成功");
          //     this.init();
          //     this.modalVisible = false;
          //   }
          // });
          // 模拟成功
          this.submitLoading = false;
          this.$Message.success("添加成功");
          this.modalVisible = false;
          <%
          }
          %>
        }
      });
    },
    add() {
      if (this.form.id == "" || this.form.id == null) {
        this.$Message.warning("请先点击选择一个节点");
        return;
      }
      this.modalTitle = "添加子节点";
      this.showParent = true;
      this.formAdd = {
        parentId: this.form.id,
        sortOrder: 0,
        <%
        for(item in fields){
          if(item.editable){
        %>
        <% if(item.type=="switch"){ %>
        ${item.field}: true,
        <% }else if(item.type=="number"||item.type=="slider"){ %>
        ${item.field}: 0,
        <% }else if(item.type=="area"||item.type=="uploadThumb"){ %>
        ${item.field}: [],
        <% }else{ %>
        ${item.field}: "",
        <% } %>
        <%
          }
        }
        %>
      };
      this.modalVisible = true;
    },
    addRoot() {
      this.modalTitle = "添加一级节点";
      this.showParent = false;
      this.formAdd = {
        parentId: 0,
        sortOrder: 0,
        title: "",
        <%
        for(item in fields){
          if(item.editable){
        %>
        <% if(item.type=="switch"){ %>
        ${item.field}: true,
        <% }else if(item.type=="number"||item.type=="slider"){ %>
        ${item.field}: 0,
        <% }else if(item.type=="area"){ %>
        ${item.field}: [],
        <% }else{ %>
        ${item.field}: "",
        <% } %>
        <%
          }
        }
        %>
      };
      this.modalVisible = true;
    },
    changeSelect(v) {
      this.selectCount = v.length;
      this.selectList = v;
    },
    delAll() {
      if (this.selectCount <= 0) {
        this.$Message.warning("您还未勾选要删除的数据");
        return;
      }
      this.$Modal.confirm({
        title: "确认删除",
        content: "您确认要删除所选的 " + this.selectCount + " 条数据及其下级所有数据?",
        loading: true,
        onOk: () => {
          let ids = "";
          this.selectList.forEach(function(e) {
            ids += e.id + ",";
          });
          ids = ids.substring(0, ids.length - 1);
           <%
          if(api){
          %>
          delete${apiName}({ids: ids}).then(res => {
            this.$Modal.remove();
            if (res.success) {
              this.$Message.success("删除成功");
              this.selectList = [];
              this.selectCount = 0;
              this.cancelEdit();
              this.init();
            }
          });
          <%
          } else {
          %>
          // this.deleteRequest("请求路径，如/tree/delByIds/" + ids).then(res => {
          //   this.$Modal.remove();
          //   if (res.success) {
          //     this.$Message.success("删除成功");
          //     this.selectList = [];
          //     this.selectCount = 0;
          //     this.cancelEdit();
          //     this.init();
          //   }
          // });
          // 模拟成功
          this.$Modal.remove();
          this.$Message.success("删除成功");
          this.selectList = [];
          this.selectCount = 0;
          this.cancelEdit();
          <%
          }
          %>
        }
      });
    }
  },
  mounted() {
    // 计算高度
    let height = document.documentElement.clientHeight;
    this.maxHeight = Number(height-287) + "px";
    this.init();
  }
};
</script>
<style lang="less">
// 建议引入通用样式 具体路径自行修改 可删除下面样式代码
// @import "../../../styles/tree-common.less";
.search {
    .operation {
        margin-bottom: 2vh;
    }
    .select-title {
        font-weight: 600;
        color: #40a9ff;
    }
    .select-clear {
        margin-left: 10px;
    }
}

.tree-bar {
    overflow: auto;
    margin-top: 5px;
    position: relative;
    min-height: 80px;
}

.tree-bar::-webkit-scrollbar {
    width: 6px;
    height: 6px;
}

.tree-bar::-webkit-scrollbar-thumb {
    border-radius: 4px;
    -webkit-box-shadow: inset 0 0 2px #d1d1d1;
    background: #e4e4e4;
}
</style>